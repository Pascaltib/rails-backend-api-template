# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters. Uses postgres and redis services.
name: "Audemic - Ruby Testing CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened,synchronize,reopened]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379 # Maps port 6379 on service container to the host
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      CI: enabled # will trigger eager-loading of the app
      # App Environment Variables
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Set up database schema
        run: bin/rails db:create db:migrate
      - name: Run tests
        run: bundle exec rspec
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Lint Ruby files
        run: bundler exec rubocop
      - name: Security audit application code
        run: bundler exec brakeman -q -w2
      - name: Security audit dependencies
        run: bundler exec bundler-audit --update
